<?php

/**
 * BaseDownload
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int                                    $id                                               Type: integer(4), primary key
 * @property int                                    $user_id                                          Type: integer(4)
 * @property int                                    $widget_id                                        Type: integer(4)
 * @property int                                    $petition_id                                      Type: integer(4)
 * @property int                                    $campaign_id                                      Type: integer(4)
 * @property string                                 $filename                                         Type: string(80), unique
 * @property string                                 $filter                                           Type: clob
 * @property string                                 $type                                             Type: string(40)
 * @property int                                    $subscriber                                       Type: integer(1)
 * @property int                                    $count                                            Type: integer(4)
 * @property int                                    $pages                                            Type: integer(4)
 * @property int                                    $pages_processed                                  Type: integer(4)
 * @property int                                    $incremental                                      Type: integer(1)
 * @property sfGuardUser                            $User                                             
 * @property Widget                                 $Widget                                           
 * @property Petition                               $Petition                                         
 * @property Campaign                               $Campaign                                         
 * @property Doctrine_Collection|PetitionSigning[]  $SigningsSuberscriber                             
 * @property Doctrine_Collection|PetitionSigning[]  $SigningsData                                     
 *  
 * @method int                                      getId()                                           Type: integer(4), primary key
 * @method int                                      getUserId()                                       Type: integer(4)
 * @method int                                      getWidgetId()                                     Type: integer(4)
 * @method int                                      getPetitionId()                                   Type: integer(4)
 * @method int                                      getCampaignId()                                   Type: integer(4)
 * @method string                                   getFilename()                                     Type: string(80), unique
 * @method string                                   getFilter()                                       Type: clob
 * @method string                                   getType()                                         Type: string(40)
 * @method int                                      getSubscriber()                                   Type: integer(1)
 * @method int                                      getCount()                                        Type: integer(4)
 * @method int                                      getPages()                                        Type: integer(4)
 * @method int                                      getPagesProcessed()                               Type: integer(4)
 * @method int                                      getIncremental()                                  Type: integer(1)
 * @method sfGuardUser                              getUser()                                         
 * @method Widget                                   getWidget()                                       
 * @method Petition                                 getPetition()                                     
 * @method Campaign                                 getCampaign()                                     
 * @method Doctrine_Collection|PetitionSigning[]    getSigningsSuberscriber()                         
 * @method Doctrine_Collection|PetitionSigning[]    getSigningsData()                                 
 *  
 * @method Download                                 setId(int $val)                                   Type: integer(4), primary key
 * @method Download                                 setUserId(int $val)                               Type: integer(4)
 * @method Download                                 setWidgetId(int $val)                             Type: integer(4)
 * @method Download                                 setPetitionId(int $val)                           Type: integer(4)
 * @method Download                                 setCampaignId(int $val)                           Type: integer(4)
 * @method Download                                 setFilename(string $val)                          Type: string(80), unique
 * @method Download                                 setFilter(string $val)                            Type: clob
 * @method Download                                 setType(string $val)                              Type: string(40)
 * @method Download                                 setSubscriber(int $val)                           Type: integer(1)
 * @method Download                                 setCount(int $val)                                Type: integer(4)
 * @method Download                                 setPages(int $val)                                Type: integer(4)
 * @method Download                                 setPagesProcessed(int $val)                       Type: integer(4)
 * @method Download                                 setIncremental(int $val)                          Type: integer(1)
 * @method Download                                 setUser(sfGuardUser $val)                         
 * @method Download                                 setWidget(Widget $val)                            
 * @method Download                                 setPetition(Petition $val)                        
 * @method Download                                 setCampaign(Campaign $val)                        
 * @method Download                                 setSigningsSuberscriber(Doctrine_Collection $val) 
 * @method Download                                 setSigningsData(Doctrine_Collection $val)         
 *  
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDownload extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('download');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('widget_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('petition_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('campaign_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('filename', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 80,
             ));
        $this->hasColumn('filter', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('type', 'string', 40, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 40,
             ));
        $this->hasColumn('subscriber', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));
        $this->hasColumn('count', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('pages', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('pages_processed', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 4,
             ));
        $this->hasColumn('incremental', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 1,
             ));

        $this->option('form', false);
        $this->option('filter', false);
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Widget', array(
             'local' => 'widget_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Petition', array(
             'local' => 'petition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Campaign', array(
             'local' => 'campaign_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PetitionSigning as SigningsSuberscriber', array(
             'local' => 'id',
             'foreign' => 'download_subscriber_id'));

        $this->hasMany('PetitionSigning as SigningsData', array(
             'local' => 'id',
             'foreign' => 'download_data_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}