<?php

/**
 * BaseDigestEmail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int              $id                                      Type: integer(8), primary key
 * @property int              $petition_id                             Type: integer(4)
 * @property int              $contact_id                              Type: integer(4)
 * @property int              $petition_signing_id                     Type: integer(8)
 * @property int              $status                                  Type: integer(4), default "1"
 * @property string           $track_campaign                          Type: string(40)
 * @property string           $tld                                     Type: string(80)
 * @property string           $email_subject                           Type: string
 * @property string           $email_body                              Type: clob
 * @property string           $subst_json                              Type: clob
 * @property Petition         $Petition                                
 * @property Contact          $Contact                                 
 * @property PetitionSigning  $PetitionSigning                         
 *  
 * @method int                getId()                                  Type: integer(8), primary key
 * @method int                getPetitionId()                          Type: integer(4)
 * @method int                getContactId()                           Type: integer(4)
 * @method int                getPetitionSigningId()                   Type: integer(8)
 * @method int                getStatus()                              Type: integer(4), default "1"
 * @method string             getTrackCampaign()                       Type: string(40)
 * @method string             getTld()                                 Type: string(80)
 * @method string             getEmailSubject()                        Type: string
 * @method string             getEmailBody()                           Type: clob
 * @method string             getSubstJson()                           Type: clob
 * @method Petition           getPetition()                            
 * @method Contact            getContact()                             
 * @method PetitionSigning    getPetitionSigning()                     
 *  
 * @method DigestEmail        setId(int $val)                          Type: integer(8), primary key
 * @method DigestEmail        setPetitionId(int $val)                  Type: integer(4)
 * @method DigestEmail        setContactId(int $val)                   Type: integer(4)
 * @method DigestEmail        setPetitionSigningId(int $val)           Type: integer(8)
 * @method DigestEmail        setStatus(int $val)                      Type: integer(4), default "1"
 * @method DigestEmail        setTrackCampaign(string $val)            Type: string(40)
 * @method DigestEmail        setTld(string $val)                      Type: string(80)
 * @method DigestEmail        setEmailSubject(string $val)             Type: string
 * @method DigestEmail        setEmailBody(string $val)                Type: clob
 * @method DigestEmail        setSubstJson(string $val)                Type: clob
 * @method DigestEmail        setPetition(Petition $val)               
 * @method DigestEmail        setContact(Contact $val)                 
 * @method DigestEmail        setPetitionSigning(PetitionSigning $val) 
 *  
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDigestEmail extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('digest_email');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('petition_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('contact_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('petition_signing_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 8,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('track_campaign', 'string', 40, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 40,
             ));
        $this->hasColumn('tld', 'string', 80, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 80,
             ));
        $this->hasColumn('email_subject', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('email_body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('subst_json', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));


        $this->index('digest_cron_idx', array(
             'fields' => 
             array(
              0 => 'status',
              1 => 'petition_id',
              2 => 'contact_id',
             ),
             ));
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Petition', array(
             'local' => 'petition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Contact', array(
             'local' => 'contact_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PetitionSigning', array(
             'local' => 'petition_signing_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}