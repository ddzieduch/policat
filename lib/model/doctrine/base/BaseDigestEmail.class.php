<?php

/**
 * BaseDigestEmail
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $petition_id
 * @property integer $contact_id
 * @property integer $petition_signing_id
 * @property integer $status
 * @property string $track_campaign
 * @property string $tld
 * @property string $email_subject
 * @property clob $email_body
 * @property clob $subst_json
 * @property Petition $Petition
 * @property Contact $Contact
 * @property PetitionSigning $PetitionSigning
 * 
 * @method integer         getId()                  Returns the current record's "id" value
 * @method integer         getPetitionId()          Returns the current record's "petition_id" value
 * @method integer         getContactId()           Returns the current record's "contact_id" value
 * @method integer         getPetitionSigningId()   Returns the current record's "petition_signing_id" value
 * @method integer         getStatus()              Returns the current record's "status" value
 * @method string          getTrackCampaign()       Returns the current record's "track_campaign" value
 * @method string          getTld()                 Returns the current record's "tld" value
 * @method string          getEmailSubject()        Returns the current record's "email_subject" value
 * @method clob            getEmailBody()           Returns the current record's "email_body" value
 * @method clob            getSubstJson()           Returns the current record's "subst_json" value
 * @method Petition        getPetition()            Returns the current record's "Petition" value
 * @method Contact         getContact()             Returns the current record's "Contact" value
 * @method PetitionSigning getPetitionSigning()     Returns the current record's "PetitionSigning" value
 * @method DigestEmail     setId()                  Sets the current record's "id" value
 * @method DigestEmail     setPetitionId()          Sets the current record's "petition_id" value
 * @method DigestEmail     setContactId()           Sets the current record's "contact_id" value
 * @method DigestEmail     setPetitionSigningId()   Sets the current record's "petition_signing_id" value
 * @method DigestEmail     setStatus()              Sets the current record's "status" value
 * @method DigestEmail     setTrackCampaign()       Sets the current record's "track_campaign" value
 * @method DigestEmail     setTld()                 Sets the current record's "tld" value
 * @method DigestEmail     setEmailSubject()        Sets the current record's "email_subject" value
 * @method DigestEmail     setEmailBody()           Sets the current record's "email_body" value
 * @method DigestEmail     setSubstJson()           Sets the current record's "subst_json" value
 * @method DigestEmail     setPetition()            Sets the current record's "Petition" value
 * @method DigestEmail     setContact()             Sets the current record's "Contact" value
 * @method DigestEmail     setPetitionSigning()     Sets the current record's "PetitionSigning" value
 * 
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDigestEmail extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('digest_email');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('petition_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 4,
             ));
        $this->hasColumn('contact_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('petition_signing_id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 8,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('track_campaign', 'string', 40, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 40,
             ));
        $this->hasColumn('tld', 'string', 80, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 80,
             ));
        $this->hasColumn('email_subject', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('email_body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('subst_json', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));


        $this->index('digest_cron_idx', array(
             'fields' => 
             array(
              0 => 'status',
              1 => 'petition_id',
              2 => 'contact_id',
             ),
             ));
        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Petition', array(
             'local' => 'petition_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Contact', array(
             'local' => 'contact_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PetitionSigning', array(
             'local' => 'petition_signing_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}