<?php

/**
 * BaseOwner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property int                                $id                                      Type: integer(4), primary key
 * @property int                                $status                                  Type: integer(4), default "1"
 * @property int                                $campaign_id                             Type: integer(4)
 * @property int                                $first_widget_id                         Type: integer(4)
 * @property string                             $firstname                               Type: string(80)
 * @property string                             $lastname                                Type: string(80)
 * @property string                             $function                                Type: string(200)
 * @property string                             $organisation                            Type: string(200)
 * @property string                             $email                                   Type: string(80)
 * @property string                             $phone                                   Type: string(80)
 * @property string                             $address                                 Type: string(200)
 * @property string                             $country                                 Type: string(5)
 * @property string                             $password                                Type: string(81)
 * @property Widget                             $FirstWidget                             
 * @property Campaign                           $Campaign                                
 * @property Doctrine_Collection|WidgetOwner[]  $WidgetOwner                             
 *  
 * @method int                                  getId()                                  Type: integer(4), primary key
 * @method int                                  getStatus()                              Type: integer(4), default "1"
 * @method int                                  getCampaignId()                          Type: integer(4)
 * @method int                                  getFirstWidgetId()                       Type: integer(4)
 * @method string                               getFirstname()                           Type: string(80)
 * @method string                               getLastname()                            Type: string(80)
 * @method string                               getFunction()                            Type: string(200)
 * @method string                               getOrganisation()                        Type: string(200)
 * @method string                               getEmail()                               Type: string(80)
 * @method string                               getPhone()                               Type: string(80)
 * @method string                               getAddress()                             Type: string(200)
 * @method string                               getCountry()                             Type: string(5)
 * @method string                               getPassword()                            Type: string(81)
 * @method Widget                               getFirstWidget()                         
 * @method Campaign                             getCampaign()                            
 * @method Doctrine_Collection|WidgetOwner[]    getWidgetOwner()                         
 *  
 * @method Owner                                setId(int $val)                          Type: integer(4), primary key
 * @method Owner                                setStatus(int $val)                      Type: integer(4), default "1"
 * @method Owner                                setCampaignId(int $val)                  Type: integer(4)
 * @method Owner                                setFirstWidgetId(int $val)               Type: integer(4)
 * @method Owner                                setFirstname(string $val)                Type: string(80)
 * @method Owner                                setLastname(string $val)                 Type: string(80)
 * @method Owner                                setFunction(string $val)                 Type: string(200)
 * @method Owner                                setOrganisation(string $val)             Type: string(200)
 * @method Owner                                setEmail(string $val)                    Type: string(80)
 * @method Owner                                setPhone(string $val)                    Type: string(80)
 * @method Owner                                setAddress(string $val)                  Type: string(200)
 * @method Owner                                setCountry(string $val)                  Type: string(5)
 * @method Owner                                setPassword(string $val)                 Type: string(81)
 * @method Owner                                setFirstWidget(Widget $val)              
 * @method Owner                                setCampaign(Campaign $val)               
 * @method Owner                                setWidgetOwner(Doctrine_Collection $val) 
 *  
 * @package    policat
 * @subpackage model
 * @author     Martin
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOwner extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('owner');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('status', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
        $this->hasColumn('campaign_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('first_widget_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('firstname', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 80,
             ));
        $this->hasColumn('lastname', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 80,
             ));
        $this->hasColumn('function', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 200,
             ));
        $this->hasColumn('organisation', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 200,
             ));
        $this->hasColumn('email', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 80,
             ));
        $this->hasColumn('phone', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 80,
             ));
        $this->hasColumn('address', 'string', 200, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 200,
             ));
        $this->hasColumn('country', 'string', 5, array(
             'type' => 'string',
             'length' => 5,
             ));
        $this->hasColumn('password', 'string', 81, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => 81,
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Widget as FirstWidget', array(
             'local' => 'first_widget_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Campaign', array(
             'local' => 'campaign_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('WidgetOwner', array(
             'local' => 'id',
             'foreign' => 'owner_id'));
    }
}